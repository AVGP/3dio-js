{"version":3,"sources":["../src/utils/uuid.js","../src/runtime.js","../src/base3d/entity.js","../src/base3d/storage.js","../src/base3d.js","../node_modules/js-logger/src/logger.js","../src/polyfills/polyfills.js","../src/bootstrap.js"],"names":["generateUuid","d","Date","now","replace","c","r","Math","random","floor","toString","validateUuid","str","PATTERN","test","registerInstance","app","instances","length","deregisterInstance","i","instance","indexOf","console","error","id","splice","getInstances","getInstanceById","l","registerPlugin","plugin","pluginsByName","name","forEach","initPlugin","initPlugins","plugins","Entity","this","Storage","Base3d","scene","storage","runtime","initialized","global","Logger","VERSION","logHandler","contextualLoggersByNameMap","bind","scope","func","apply","arguments","merge","key","args","target","hasOwnProperty","defineLogLevel","value","DEBUG","INFO","TIME","WARN","ERROR","OFF","ContextualLogger","defaultContext","context","setLevel","filterLevel","log","info","prototype","newLevel","enabledFor","lvl","debug","invoke","warn","time","label","timeEnd","level","msgArgs","globalLogger","L","setHandler","get","createDefaultHandler","options","formatter","messages","unshift","timerStartTimeByLabelMap","invokeConsoleMethod","hdlr","Function","call","Array","slice","timerLabel","getTime","useDefaults","defaultLevel","module","exports","_prevLogger","noConflict","undefined","Number","EPSILON","pow","isInteger","isFinite","sign","x","Object","defineProperty","match","assign","TypeError","output","index","source","nextKey","env","IS_NODE","process","title","find","findFirst","save","load","destroyed","destroy","utils"],"mappings":"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","sourcesContent":["var PATTERN = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i\n\n/**\n * Generate an UUID as specified in RFC4122\n * @memberof Base3d\n * @function utils#generateUuid\n */\n\nexport function generateUuid () {\n  var d = Date.now()\n  var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = (d + Math.random() * 16) % 16 | 0;\n    d = Math.floor(d / 16);\n    return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n  })\n  return uuid\n}\n\n/**\n * Validates UUID as specified in RFC4122\n * @memberof Base3d\n * @function utils#validateUuid\n */\n\nexport function validateUuid (str) {\n  if (!str || typeof str !== \"string\") return false\n  return PATTERN.test(str)\n}\n","// rgeistries\n\nvar instances = []\nvar plugins = []\n\n// constants\n\nvar IS_NODE = !!(\n  typeof module !== 'undefined'\n  && module.exports\n  && typeof process !== 'undefined'\n  && Object.prototype.toString.call(process) === '[object process]'\n  && process.title.indexOf('node') !== -1\n)\n\n// instances\n\nfunction registerInstance (app) {\n  instances[instances.length] = app\n}\n\nfunction deregisterInstance (app) {\n  var i = instance.indexOf(app)\n  if (i === -1) {\n    console.error('Instance with id:'+app.id+' not found in runtime registry.')\n  } else {\n    instances.splice(i,1)\n  }\n}\n\nfunction getInstances () {\n  return instances\n}\n\nfunction getInstanceById (id) {\n  for (var i = 0, l = instances.length; i < l; i++) {\n    if (instances[i].id === id) return instances[i]\n  }\n  return null\n}\n\n// plugins\n\nfunction registerPlugin (plugin) {\n  if (pluginsByName[plugin.name]) {\n    console.error('Plugin '+plugin.name+' has been registered already.')\n    return false\n  } else {\n    pluginsByName[plugin.name] = plugin\n    // TODO: init plugin on running instances\n    getInstances().forEach(function(app){\n      initPlugin(app, plugin)\n    })\n    return true\n  }\n}\n\nfunction initPlugin (app, plugin) {\n\n  // TODO: init plugin here\n\n}\n\nfunction initPlugins (app) {\n  plugins.forEach(function(plugin){\n    initPlugin(app, plugin)\n  })\n}\n\n// export public functions\n\nexport default {\n\n  env: {\n    IS_NODE: IS_NODE\n  },\n\n  registerInstance: registerInstance,\n  deregisterInstance: deregisterInstance,\n  getInstanceById: getInstanceById,\n  getInstances: getInstances,\n\n  registerPlugin: registerPlugin,\n  initPlugins: initPlugins\n\n}","/**\n * @memberof Base3d\n * @namespace entity\n */\nexport default function Entity (app) {\n  // Avoid direct this references (= less bugs and ES2015 compatible)\n  var this_ = this\n\n  this_.app = app\n\n}\n\n/**\n * ...\n * @memberof Base3d\n * @function entity#find\n * @param   {object}                          args\n * @param   {string}                          [args.apiUrl]           - Url of archilogic services server-side endpoints.\n * @param   {string}                          [args.modelMakerApiUrl] - Url of model maker services server-side endpoints.\n * @param   {('error'|'warn'|'info'|'debug')} [args.logLevel=warn]         - Specify logging level\n * @returns {Promise}\n */\nEntity.prototype.find = function find () {\n  console.log('Found nothing')\n}\n\n/**\n * ...\n * @memberof Base3d\n * @function entity#findFirst\n * @param   {object}                          args\n * @param   {string}                          [args.apiUrl]           - Url of archilogic services server-side endpoints.\n * @param   {string}                          [args.modelMakerApiUrl] - Url of model maker services server-side endpoints.\n * @param   {('error'|'warn'|'info'|'debug')} [args.logLevel=warn]         - Specify logging level\n * @returns {Promise}\n */\nEntity.prototype.findFirst = function find () {\n  console.log('Found nothing')\n}","/**\n * @memberof Base3d\n * @namespace storage\n */\nexport default function Storage (app) {\n  // Avoid direct this references (= less bugs and ES2015 compatible)\n  var this_ = this\n\n  this_.app = app\n\n}\n\n/**\n * ...\n * @memberof Base3d\n * @function storage#save\n * @param   {object}                          args\n * @param   {string}                          [args.apiUrl]           - Url of archilogic services server-side endpoints.\n * @param   {string}                          [args.modelMakerApiUrl] - Url of model maker services server-side endpoints.\n * @param   {('error'|'warn'|'info'|'debug')} [args.logLevel=warn]         - Specify logging level\n * @returns {Promise}\n */\nStorage.prototype.save = function save () {\n  console.log('Found nothing')\n}\n\n/**\n * ...\n * @memberof Base3d\n * @function storage#load\n * @param   {object}                          args\n * @param   {string}                          [args.apiUrl]           - Url of archilogic services server-side endpoints.\n * @param   {string}                          [args.modelMakerApiUrl] - Url of model maker services server-side endpoints.\n * @param   {('error'|'warn'|'info'|'debug')} [args.logLevel=warn]         - Specify logging level\n * @returns {Promise}\n */\nStorage.prototype.load = function load () {\n  console.log('Found nothing')\n}","import './bootstrap.js'\n\nimport { generateUuid, validateUuid } from './utils/uuid.js'\nimport runtime from './runtime.js'\nimport Entity from './base3d/entity.js'\nimport Storage from './base3d/storage.js'\n\n/**\n * Creates an Base3d application instance.\n * @class Base3d\n * */\nexport default function Base3d () {\n  // Avoid direct this references (= less bugs and ES2015 compatible)\n  var app = this\n\n  app.id = generateUuid()\n\n  app.scene = new Entity(app)\n  app.storage = new Storage(app)\n\n  runtime.registerInstance(app)\n\n  // Flags\n  app.initialized = true\n\n}\n\n// Static flags\nBase3d.initialized = false\nBase3d.destroyed = null\n\n/**\n * ...\n * @memberof Base3d\n * */\nBase3d.prototype.destroy = function destroy () {\n  var app = this\n\n  runtime.deregisterInstance(app)\n  app.destroyed = true\n}\n\n/**\n * ...\n * @memberof Base3d\n * @function\n * */\nBase3d.registerPlugin = Base3d.prototype.registerPlugin = runtime.registerPlugin\n\n/**\n * ...\n * @memberof Base3d\n * @namespace\n * */\nBase3d.utils = Base3d.prototype.utils = {\n  generateUuid: generateUuid,\n  validateUuid: validateUuid\n}","/*!\r\n * js-logger - http://github.com/jonnyreeves/js-logger\r\n * Jonny Reeves, http://jonnyreeves.co.uk/\r\n * js-logger may be freely distributed under the MIT license.\r\n */\r\n(function (global) {\r\n\t\"use strict\";\r\n\r\n\t// Top level module for the global, static logger instance.\r\n\tvar Logger = { };\r\n\r\n\t// For those that are at home that are keeping score.\r\n\tLogger.VERSION = \"1.3.0\";\r\n\r\n\t// Function which handles all incoming log messages.\r\n\tvar logHandler;\r\n\r\n\t// Map of ContextualLogger instances by name; used by Logger.get() to return the same named instance.\r\n\tvar contextualLoggersByNameMap = {};\r\n\r\n\t// Polyfill for ES5's Function.bind.\r\n\tvar bind = function(scope, func) {\r\n\t\treturn function() {\r\n\t\t\treturn func.apply(scope, arguments);\r\n\t\t};\r\n\t};\r\n\r\n\t// Super exciting object merger-matron 9000 adding another 100 bytes to your download.\r\n\tvar merge = function () {\r\n\t\tvar args = arguments, target = args[0], key, i;\r\n\t\tfor (i = 1; i < args.length; i++) {\r\n\t\t\tfor (key in args[i]) {\r\n\t\t\t\tif (!(key in target) && args[i].hasOwnProperty(key)) {\r\n\t\t\t\t\ttarget[key] = args[i][key];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn target;\r\n\t};\r\n\r\n\t// Helper to define a logging level object; helps with optimisation.\r\n\tvar defineLogLevel = function(value, name) {\r\n\t\treturn { value: value, name: name };\r\n\t};\r\n\r\n\t// Predefined logging levels.\r\n\tLogger.DEBUG = defineLogLevel(1, 'DEBUG');\r\n\tLogger.INFO = defineLogLevel(2, 'INFO');\r\n\tLogger.TIME = defineLogLevel(3, 'TIME');\r\n\tLogger.WARN = defineLogLevel(4, 'WARN');\r\n\tLogger.ERROR = defineLogLevel(8, 'ERROR');\r\n\tLogger.OFF = defineLogLevel(99, 'OFF');\r\n\r\n\t// Inner class which performs the bulk of the work; ContextualLogger instances can be configured independently\r\n\t// of each other.\r\n\tvar ContextualLogger = function(defaultContext) {\r\n\t\tthis.context = defaultContext;\r\n\t\tthis.setLevel(defaultContext.filterLevel);\r\n\t\tthis.log = this.info;  // Convenience alias.\r\n\t};\r\n\r\n\tContextualLogger.prototype = {\r\n\t\t// Changes the current logging level for the logging instance.\r\n\t\tsetLevel: function (newLevel) {\r\n\t\t\t// Ensure the supplied Level object looks valid.\r\n\t\t\tif (newLevel && \"value\" in newLevel) {\r\n\t\t\t\tthis.context.filterLevel = newLevel;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Is the logger configured to output messages at the supplied level?\r\n\t\tenabledFor: function (lvl) {\r\n\t\t\tvar filterLevel = this.context.filterLevel;\r\n\t\t\treturn lvl.value >= filterLevel.value;\r\n\t\t},\r\n\r\n\t\tdebug: function () {\r\n\t\t\tthis.invoke(Logger.DEBUG, arguments);\r\n\t\t},\r\n\r\n\t\tinfo: function () {\r\n\t\t\tthis.invoke(Logger.INFO, arguments);\r\n\t\t},\r\n\r\n\t\twarn: function () {\r\n\t\t\tthis.invoke(Logger.WARN, arguments);\r\n\t\t},\r\n\r\n\t\terror: function () {\r\n\t\t\tthis.invoke(Logger.ERROR, arguments);\r\n\t\t},\r\n\r\n\t\ttime: function (label) {\r\n\t\t\tif (typeof label === 'string' && label.length > 0) {\r\n\t\t\t\tthis.invoke(Logger.TIME, [ label, 'start' ]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\ttimeEnd: function (label) {\r\n\t\t\tif (typeof label === 'string' && label.length > 0) {\r\n\t\t\t\tthis.invoke(Logger.TIME, [ label, 'end' ]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Invokes the logger callback if it's not being filtered.\r\n\t\tinvoke: function (level, msgArgs) {\r\n\t\t\tif (logHandler && this.enabledFor(level)) {\r\n\t\t\t\tlogHandler(msgArgs, merge({ level: level }, this.context));\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Protected instance which all calls to the to level `Logger` module will be routed through.\r\n\tvar globalLogger = new ContextualLogger({ filterLevel: Logger.OFF });\r\n\r\n\t// Configure the global Logger instance.\r\n\t(function() {\r\n\t\t// Shortcut for optimisers.\r\n\t\tvar L = Logger;\r\n\r\n\t\tL.enabledFor = bind(globalLogger, globalLogger.enabledFor);\r\n\t\tL.debug = bind(globalLogger, globalLogger.debug);\r\n\t\tL.time = bind(globalLogger, globalLogger.time);\r\n\t\tL.timeEnd = bind(globalLogger, globalLogger.timeEnd);\r\n\t\tL.info = bind(globalLogger, globalLogger.info);\r\n\t\tL.warn = bind(globalLogger, globalLogger.warn);\r\n\t\tL.error = bind(globalLogger, globalLogger.error);\r\n\r\n\t\t// Don't forget the convenience alias!\r\n\t\tL.log = L.info;\r\n\t}());\r\n\r\n\t// Set the global logging handler.  The supplied function should expect two arguments, the first being an arguments\r\n\t// object with the supplied log messages and the second being a context object which contains a hash of stateful\r\n\t// parameters which the logging function can consume.\r\n\tLogger.setHandler = function (func) {\r\n\t\tlogHandler = func;\r\n\t};\r\n\r\n\t// Sets the global logging filter level which applies to *all* previously registered, and future Logger instances.\r\n\t// (note that named loggers (retrieved via `Logger.get`) can be configured independently if required).\r\n\tLogger.setLevel = function(level) {\r\n\t\t// Set the globalLogger's level.\r\n\t\tglobalLogger.setLevel(level);\r\n\r\n\t\t// Apply this level to all registered contextual loggers.\r\n\t\tfor (var key in contextualLoggersByNameMap) {\r\n\t\t\tif (contextualLoggersByNameMap.hasOwnProperty(key)) {\r\n\t\t\t\tcontextualLoggersByNameMap[key].setLevel(level);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Retrieve a ContextualLogger instance.  Note that named loggers automatically inherit the global logger's level,\r\n\t// default context and log handler.\r\n\tLogger.get = function (name) {\r\n\t\t// All logger instances are cached so they can be configured ahead of use.\r\n\t\treturn contextualLoggersByNameMap[name] ||\r\n\t\t\t(contextualLoggersByNameMap[name] = new ContextualLogger(merge({ name: name }, globalLogger.context)));\r\n\t};\r\n\r\n\t// CreateDefaultHandler returns a handler function which can be passed to `Logger.setHandler()` which will\r\n\t// write to the window's console object (if present); the optional options object can be used to customise the\r\n\t// formatter used to format each log message.\r\n\tLogger.createDefaultHandler = function (options) {\r\n\t\toptions = options || {};\r\n\r\n\t\toptions.formatter = options.formatter || function defaultMessageFormatter(messages, context) {\r\n\t\t\t// Prepend the logger's name to the log message for easy identification.\r\n\t\t\tif (context.name) {\r\n\t\t\t\tmessages.unshift(\"[\" + context.name + \"]\");\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Map of timestamps by timer labels used to track `#time` and `#timeEnd()` invocations in environments\r\n\t\t// that don't offer a native console method.\r\n\t\tvar timerStartTimeByLabelMap = {};\r\n\r\n\t\t// Support for IE8+ (and other, slightly more sane environments)\r\n\t\tvar invokeConsoleMethod = function (hdlr, messages) {\r\n\t\t\tFunction.prototype.apply.call(hdlr, console, messages);\r\n\t\t};\r\n\r\n\t\t// Check for the presence of a logger.\r\n\t\tif (typeof console === \"undefined\") {\r\n\t\t\treturn function () { /* no console */ };\r\n\t\t}\r\n\r\n\t\treturn function(messages, context) {\r\n\t\t\t// Convert arguments object to Array.\r\n\t\t\tmessages = Array.prototype.slice.call(messages);\r\n\r\n\t\t\tvar hdlr = console.log;\r\n\t\t\tvar timerLabel;\r\n\r\n\t\t\tif (context.level === Logger.TIME) {\r\n\t\t\t\ttimerLabel = (context.name ? '[' + context.name + '] ' : '') + messages[0];\r\n\r\n\t\t\t\tif (messages[1] === 'start') {\r\n\t\t\t\t\tif (console.time) {\r\n\t\t\t\t\t\tconsole.time(timerLabel);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttimerStartTimeByLabelMap[timerLabel] = new Date().getTime();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (console.timeEnd) {\r\n\t\t\t\t\t\tconsole.timeEnd(timerLabel);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tinvokeConsoleMethod(hdlr, [ timerLabel + ': ' +\r\n\t\t\t\t\t\t\t(new Date().getTime() - timerStartTimeByLabelMap[timerLabel]) + 'ms' ]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// Delegate through to custom warn/error loggers if present on the console.\r\n\t\t\t\tif (context.level === Logger.WARN && console.warn) {\r\n\t\t\t\t\thdlr = console.warn;\r\n\t\t\t\t} else if (context.level === Logger.ERROR && console.error) {\r\n\t\t\t\t\thdlr = console.error;\r\n\t\t\t\t} else if (context.level === Logger.INFO && console.info) {\r\n\t\t\t\t\thdlr = console.info;\r\n\t\t\t\t}\r\n\r\n\t\t\t\toptions.formatter(messages, context);\r\n\t\t\t\tinvokeConsoleMethod(hdlr, messages);\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\t// Configure and example a Default implementation which writes to the `window.console` (if present).  The\r\n\t// `options` hash can be used to configure the default logLevel and provide a custom message formatter.\r\n\tLogger.useDefaults = function(options) {\r\n\t\tLogger.setLevel(options && options.defaultLevel || Logger.DEBUG);\r\n\t\tLogger.setHandler(Logger.createDefaultHandler(options));\r\n\t};\r\n\r\n\t// Export to popular environments boilerplate.\r\n\tif (typeof define === 'function' && define.amd) {\r\n\t\tdefine(Logger);\r\n\t}\r\n\telse if (typeof module !== 'undefined' && module.exports) {\r\n\t\tmodule.exports = Logger;\r\n\t}\r\n\telse {\r\n\t\tLogger._prevLogger = global.Logger;\r\n\r\n\t\tLogger.noConflict = function () {\r\n\t\t\tglobal.Logger = Logger._prevLogger;\r\n\t\t\treturn Logger;\r\n\t\t};\r\n\r\n\t\tglobal.Logger = Logger;\r\n\t}\r\n}(this));\r\n","// based on https://raw.githubusercontent.com/mrdoob/three.js/dev/src/polyfills.js\n\nif (Number.EPSILON === undefined) {\n  Number.EPSILON = Math.pow(2, -52);\n}\n\nif (Number.isInteger === undefined) {\n  // Missing in IE\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\n  Number.isInteger = function (value) {\n    return typeof value === 'number' && isFinite(value) && Math.floor(value) === value\n  }\n}\n\nif (Math.sign === undefined) {\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n  Math.sign = function (x) {\n    return ( x < 0 ) ? -1 : ( x > 0 ) ? 1 : +x\n  }\n}\n\nif (Function.prototype.name === undefined) {\n  // Missing in IE\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n  Object.defineProperty(Function.prototype, 'name', {\n    get: function () {\n      return this.toString().match(/^\\s*function\\s*([^\\(\\s]*)/)[1]\n    }\n  })\n}\n\nif (Object.assign === undefined) {\n  // Missing in IE\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n  (function () {\n    Object.assign = function (target) {\n      'use strict';\n      if (target === undefined || target === null) {\n        throw new TypeError('Cannot convert undefined or null to object')\n      }\n      var output = Object(target)\n      for (var index = 1; index < arguments.length; index++) {\n        var source = arguments[index]\n        if (source !== undefined && source !== null) {\n          for (var nextKey in source) {\n            if (Object.prototype.hasOwnProperty.call(source, nextKey)) {\n              output[nextKey] = source[nextKey]\n            }\n          }\n        }\n      }\n      return output\n    }\n  })()\n}","import Logger from 'js-logger'\nimport './polyfills/polyfills.js'\n\n// Bootstrap logger\nLogger.useDefaults()"]}